#【往復して動かせるようにする】
# 今回は円がキャンパスの端に当たったときには、そこで移動が反転して往復運動するように改良していく

#【キャンパスの端に当たったら、移動量を反転する】
# 方法は簡単で、円のX座標とキャンパスの左端・右端のX座標を判定して、もし超えたら反転するように設定すれば良い
# 反転することろの判定は、左端(=X座標が0)と右端(=X座標がキャンパスの幅)の2点で行う
# 移動していくのは円なので、判定する座標には半径も含めた方が良いが、ここでは簡単にするために、「円」の「中心点」で判定する
# つまり、円自体は半径の分だけはみ出てから反転する

#【移動量を変数にする】

# coding:utf-8
import tkinter as tk

# 円の座標と半径
x = 400
y = 300
# 移動量
dx = 1              # 最初は1、つまり右方方向に動かす

def move():
    global x, y, dx
    # 今の円を消す
    canvas.create_oval(x - 20, y - 20, x + 20, y + 20, fill = "white", width = 0)
    # X座標を動かす
    x = x + dx      # dxは「１」か「-１」のいずれかです
    # 次の位置に円を描く
    canvas.create_oval(x - 20, y - 20, x + 20, y + 20, fill = "red", width = 0)
    # 端を超えていたら反対向きにする
    if x >= canvas.winfo_width():
      dx = -1       # 左に移動するようにする
    if x <= 0:
      dx = +1       # 右に移動するようにする
    #　再びタイマー
    root.after(10, move)


# ウィンドウを描く
root = tk.Tk()
root.geometry("600x400")

# キャンバスを置く
canvas =tk.Canvas(root, width =600, height =400, bg="white")
canvas.place(x = 0, y = 0)

# タイマーを設定する
root.after(10, move) 

root.mainloop()


# 円が右に移動するプログラムでは、
# x = x + 1
# のようにX座標に「１」を加えていましたが、左に移動させるには、今度は逆にX座標を減らす

# そこで、このプログラムでは「移動量」を変数にして、dxという変数名にした
# 移動量
# dx = 1

# そして、move関数の中では、
# x = x + dx
# としてX座標を変更している。最初は、dxの値が「１」なので、１が足される。つまり、右に進んでいく
#《MEMO》ここでの変数名を「dx」としたが、他の名前でも良い。「dx」の「d」は「delta」の意味として、何かの微小な差を保存する時の変数名によく使う

#【キャンパスの端で移動量を反転する】
# 円がキャンパスの端まで移動したときは、その移動量ー変数dxの値ーを反転させる。反転すべき点は、右端と左端の両方にある
# ①右端の反転
# if x >= canvas.winfo_width():
#    dx = -1
# 右端は、X座標がキャンパス幅を超えたかどうかで調査する。キャンパス幅は、winfo_widthメソッドを実行すると取得できる
# キャンパスの右端を超えたときは、「-1」を設定した。
# そうすることで、円を移動する処理である以下の部分で「−１」が足されていくようになるので、X座標が減っていく(=円が左方向に動く=反転する)ようになる
# x = x + dx 

#《MEMO》このプログラムでは、キャンパス幅が600なので、winfo_widthというメソッドを使わず、「x >= 600」と記述しても同じ
# しかしメソッドを使って取得しておけば、あとでキャンパスの大きさを変更することになったときでも、ifの部分の修正が必要ない
# その理由から、固定値を書くのではなく、この例のようにメソッドを使って実際の値を取得するようにプログラムした方が望ましい

# ②左端の反転 
# 左端のX座標の判定は、次のようになる
# if x <= 0:

#左側はX座標が０なので、「x <= 0」で比較する 
# ここでは、dxを「+1」に設定してるので、今度はxに「+1」が足されていくようになるので、X座標が増えていく(=円が右方向に動いていく=反転する)ようになる
#《MEMO》ここでは、プラスであることを分かりやすくするため、「dx = +1」と記述しましたが、「dx = 1」と記述しても同じである

# ①と②の処理によって、「右端に来たときは移動量が「+1」から「-1」へ、左端に来たときは移動量が「-1」から「+1」へ変わるので、円が左右に往復運動する」動きになる

