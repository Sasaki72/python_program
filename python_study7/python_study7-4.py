#【円を右に動かす】
# Lesson7-4ではクリックしなくても円が勝手に右に動いていくプログラムを作っていく

#【一定時間ごとにズラしていく】
#「円を右に動かす」のは難しいように思えますが、要は結果として、円が右に動いていくように見えればいい
# どのようにするかというと、「少しずつ円のX座標を増やしながら描いたり消したりを繰り返すこと」
# そうすることで、その連続した動作が右に動いていくように見える

#【tkinterのタイマーを使って一定時間ごとに関数を実行する】
# tkinterには「タイマー機能が」あり、一定時間が経過した後に指定した関数を実行できる
# タイマーはtkinterオブジェクトのafterメソッドを呼び出すことで動き出す
# 例えば、
# root = tk.Tk()

# というように変数rootがtkinterオブジェクトを指している場合、タイマーを動かすには以下を記述する
# root.after(時間, 実行したい関数)

# 時間は1000分の1秒単位で指定する
# この単位を「ミリ秒」をいう
# 例えば、「500」と指定した場合は、「0.5秒後に実行する」という意味
# 円が動くようなアニメーションであれば、30 (=0.03秒) 〜10 (=0.01秒)程度の微小な値を指定して、そのつど円を描画する座標を少しずつ変えていくと動いているように見える
#《MEMO》テレビや映画のアニメーションは1秒間に24コマまたは30コマで動いている
# なのでそういったスムーズに動かしたいのであれば、1000÷24≒40程度の値以下に指定するといい、それより大きいと動きがカクカクする


# coding:utf-8
import tkinter as tk

# 円の座標
x = 300
y = 200

def move():
    global x, y             # 増やしていくので右に動く
    # 今の円を消す
    canvas.create_oval(x - 20, y - 20, x + 20, y + 20, fill = "white", width = 0)
    # X座標を動かす
    x = x + 1
    # 次の位置に円を描く
    canvas.create_oval(x - 20, y - 20, x + 20, y + 20, fill = "red", width = 0)
    # 再びタイマー
    root.after(10, move)    # 次も実行されるようにするため再設定する

# ウィンドウを描く
root = tk.Tk()
root.geometry("600x400")

# キャンバスを置く
canvas =tk.Canvas(root, width =600, height =400, bg="white")
canvas.place(x = 0, y = 0)

# タイマーを設定する
root.after(10, move)        # 0.01秒後にmove関数が実行されるように設定する

root.mainloop()


# 今回はafterメソッドを使い、0.01秒 (=10ミリ秒)後に、move関数を実行するようにした
root.after(10, move)

# move関数では、いまの場所の円を消しています。これは前のLessonで説明した、クリックで円を動かす時と同じ処理
# いまの円を消す
# canvas.create_oval(x - 20, y - 20, x + 20, y + 20, fill = "white", width = 0)

# そしてX座標を増やして、その位置に円を描画する
# X座標を動かす
# x = x + 1
# 次の位置に円を描く
# canvas.create_oval(x - 20, y - 20, x + 20, y + 20, fill = "red", width = 0)

# afterメソッドは「1回だけ」有効なので、このままではもうmove関数は呼び出せない
# 従って、もう1度afterメソッドでmove関数を登場し、次も実行されるようにする
# 再びタイマー
# root.after(10, move)


#《COLUMN》
# もっと速く円を動かしたいときは、２つの方法がある
# ①タイマーの感覚を速くする
# １つ目の方法は、afterメソッドに渡す「ミリ秒後」の値を小さくすること
# 今回は「１０」に指定してるが、これを「５」にすれば、move関数が0.005秒に1回実行されるようになるので倍速で動く
# root.after(5, move)
# 注意：ただしこの方法は実行される回数が増えてパソコンの負荷が高まるので、あまり小さい値にすべきではない 
# ②座標の移動量を増やす
# Xの移動量を増やすやり方
# x座標を動かす
# x = x +1
# とあるが
# x = x + 2
# のように２つずつ増やせば、倍速で動くようになる