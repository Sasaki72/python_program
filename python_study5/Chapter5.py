#数当てゲームを作る
# 5-1
#「ヒット＆ブロー」
# ヒット＆ブローは4桁の数字を当てるゲーム
# 二人のプレーヤー「親(出題者)」と「子(回答者)」に分かれてプレイする
# 「ヒット＆ブロー」のルール
# ①親は「0」〜「9」の数字を使って、4桁の数字を考える。同じ数字を二回以上使ってもOK
# ②子は、その数字を予想して親に提示する
# ③親は②で提示された数字を判定し、ヒットとブローの数字を子に提示する
# ・「数字と位置が正しい場合 ＝ ヒット
# ・「位置は正しくないが、その数字が含まれている場合 = ブロー」
# ④②〜③を繰り返し、子はヒットとブローの結果を参考にして、親が考えた4桁の数字を当てる

# Pythonで「ヒット＆ブロー」を作る場合、コンピューター側が親(出題者)、ユーザー側が子(回答者)とする
# Pythonで「ヒット＆ブロー」を作る流れとして
# ①4桁のランダムの数字を作る
# ②ユーザーに4桁の数字を入力してもらう
# ③①と②を比較して、ヒットとブローの数を表示。
# ヒットが４でなければ、もう一度入力してもらう

# 5-2
# ランダムな値を生成するには、「randomモジュール」を使う
# 書式は「import モジュール名」
# ※ランダムな値の事は乱数(らんすう)ともいう
#randomモジュールをインポートすると、「import モジュール関数名」でランダムな値に関する様々な機能が使える様になる。
# 「randint(ランドイント)」という関数を使うと、特定の範囲から整数のランダムな値を取得できる。
# 例えば「random.randint(0,9)」と書けば0から9までのランダムな値を取得できる。

# random.seed(a,vresion)　ランダムな値の基となる値を設定する。
# random.randint(a,b)　　　a以上b以下のランダムな整数を返す
# random.choice(seq)      の中からランダムに１つ取り出す
# random.shuffle(x)       xをランダムな順に並べ替える
# random.random           0.0以上〜1.0未満のランダムな小数値を返す


#ランダムな1桁の数を表示する
#coding : utf-8
import random #randomモジュールインポート

a = random.randint(0 , 9) #0から9までのランダムな値を作る、実行するたびに結果が変わる
print(a)

# 文字入力する
# 文字入力するにはいくつか方法があるが「input」関数を使うのが簡単
# 例えばこの様に使う　「b = input("数を入れてね>")」
# カッコの中はユーザーに表示したいメッセージ
# 画面には「数を入れてね>」と表示され、文字入力待ちの状態になる
# ユーザーが文字を入力すると、その結果がinput関数から返され、上記のbに格納される

#coding:utf-8

b = input("数を入れてね>") #ユーザーから文字を入力してもらう
print(b)                 #入力された文字を表示
#ターミナル上で入力すると確認できる

#応用
e = input("数を入れてね>") 
print(e) 

# ランダムに1桁の数字を作るプログラムで当たりかどうかを確認する簡単なゲームを作る
# if a == b:
#     print("当たり")
#else:
#     print("はずれ")
# を使用するが、「if」と「else」はインデント(字下げ)を行う

#  coding:utf-8
import random

a = random.randint(0, 9) #コンピューターが考えたランダムな値
print(a)                 #テストのために考えを見せている

b = input("数を入れてね>") #人間が入力した値
if a == b:               #等しいかを判定(実は間違い→後述)
  print("当たり")         #等しければ当たり
else:
  print("はずれ")

#↑が正しく表示されない理由は「数値」と「文字列」を比較しているから
#「random.randint(0, 9)」で作ったランダムな値は、0から9の「数値」。それに対して、「input」で入力したものは、「文字列」として認識される。
# pythonの場合「==」で「数値」と「文字列」を比較して、等しいと判断する事はない
#それには「文字列」で入力したものを一旦「数値」に変化すればいい
#その場合「int」を使う
#b = int(input("数を入れてね>"))

#coding:utf-8
import random
a = random.randint(0 , 9)
print(a)

b = int(input("数を入れてね>")) #修正箇所
if a == b:
  print("当たり")
else:
  print("はずれ")

#5-3
#4桁のランダムな値を作るには、単純に1桁のランダムな値を4回繰り返すだけ

#coding:utf-8
import random

a1 = random.randint(0 , 9) #4つのランダムな数を作る
a2 = random.randint(0 , 9) #4つのランダムな数を作る
a3 = random.randint(0 , 9) #4つのランダムな数を作る
a4 = random.randint(0 , 9) #4つのランダムな数を作る

print(str(a1) + str(a2) + str(a3) + str(a4)) #数を繋げて表示する

#「a1」「a2」「a3」「a4」は数値なので連結でこのまま足しては４つの合計が求められしまうので、4桁のランダムな値を表示するには「str」で文字列に変換しないといけない
#str(a1) + str(a2) + str(a3) + str(a4) ⇨　3995 
#とした場合
# a1 + a2 + a3 + a4 ⇨ 26 (3+9+9+5) となってしまう

# 【リストを使う】
# 「a1」「a2」「a3」「a4」と別々の変数に保存していく方法もあるが、後で値が等しいかを調べる時に処理が複雑になる
#pythonでは同じ値をひとまとめにする「リスト(list)」がある
#列挙したデータは []と,で区切る
# a = [6,8,0,2] と記述するとaには4つの箱ができそれぞれ「6」「8」「0」「2」の値が格納される
#このことを「要素(element)」と言う
#要素には「0」から始まる番号が付く、この番号のことを「インデックス」または「添字(そえじ)」と言う

#要素の値は、インデックスを指定すると参照できる
# a[0]は「6」、a[1]は「8」、a[2]は「0」、a[3]は「2」となる

a = [6,8,0,2]

