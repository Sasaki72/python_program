# リストなどに要素として格納されている文字列を指定した区切り文字で連結する(join)

# リストやタプルなどのイテラブルオブジェクトに要素として格納されている複数の文字列を指定した区切り文字で連結し新しい文字列として取得するメソッドの使い方について解説します。

# 『リストなどに格納されている文字列を連結する(joinメソッド)』
# join メソッドはリストやタプルなどイテラブルオブジェクトに要素として格納されている複数の文字列を、指定した区切り文字で連結した新しい文字列を返します。使い方は次の通りです。

# str.join(iterable)

# 引数に指定したイテラブルオブジェクトに含まれる複数の文字列を連結します。区切り文字は join メソッドを呼び出した str で指定します。

# 簡単な例で試してみます。

# >>> "".join(["Apple", "Orange", "Lemon"])
# 'AppleOrangeLemon'
# >>> ",".join(("Blue", "Red", "Green"))
# 'Blue,Red,Green'
# >>>


# 最初の例ではリストに含まれる複数の文字列を連結しています。区切り文字として空文字を指定しているので、文字列が区切り文字無しで連結された新しい文字列を取得しています。

# 2 番目の例ではタプルに含まれる複数の文字列を連結しています。区切り文字としてカンマ(,)を指定しているので、文字列がカンマで区切られて連結された新しい文字列を取得しています。

# リストなどの要素に数値など文字列ではないものが含まれていると TypeError エラーが発生します。


# >>> "".join(["Apple", 12, "Lemon"])
# Traceback (most recent call last):
#   File "&llt;stdin>", line 1, in <module>
# TypeError: sequence item 1: expected str instance, int found
# >>>


# join メソッドではなく、"+"演算子などを使った文字列の連結方法については「文字列の連結と繰り返し(乗算)」を参照されてください。

# -- --

# リストやタプルなどのイテラブルオブジェクトに要素として格納されている複数の文字列を指定した区切り文字で連結し新しい文字列として取得するメソッドの使い方について解説しました。